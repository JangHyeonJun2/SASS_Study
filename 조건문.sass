/*조건의 값(true, false)에 따라 두 개의 표현식 중 하나만 반환합니다.
조건부 삼항 연산자(conditional ternary operator)와 비슷합니다.

조건의 값이 true이면 표현식1을,
조건의 값이 false이면 표현식2를 실행합니다.*/
$w: 100px;
div{
  width: if($w > 200px,$w,null);
  height: 200px;
}

/*@if 지시어는 조건에 따른 분기 처리가 가능하며, if 문(if statements)과 유사합니다.
같이 사용할 수 있는 지시어는 @else, if가 있습니다.
추가 지시어를 사용하면 좀 더 복잡한 조건문을 작성할 수 있습니다.*/
// @if
@if (조건) {
  /* 조건이 참일 때 구문 */
}

// @if @else
/*
@if (조건) {
  조건이 참일 때 구문
} @else {
  조건이 거짓일 때 구문
}
// @if @else if
@if (조건1) {
  조건1이 참일 때 구문
} @else if (조건2) {
  조건2가 참일 때 구문 
} @else {
  모두 거짓일 때 구문
}*/
$color: orange;
div {
  @if $color == strawberry {
    color: #FE2E2E;
  } @else if $color == orange {
    color: #FE9A2E;
  } @else if $color == banana {
    color: #FFFF00;
  } @else {
    color: #2A1B0A;
  }
}

@function limitSize($size){
  @if($size >= 0 and $size <= 200px){
    @return 200px;
  }@else{
    @return 800px;
  }
}
div{
  width: limitSize(180px);
  height: limitSize(340px);
}
/*Sass의 내장 함수 unitless()는 숫자에 단위가 있는지 여부를 반환합니다*/
@mixin positionCenter($w, $h, $p: absolute){
  @if($p == abolute or $p == fixed){
    width: if(unitless($w),#{$w}px,$w);
    height: if(unitless($h),#{$h}px,$h);
    position: $p;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
  }
}

.box1{
  @include positionCenter(10px,20px);
}
.box2{
  @include positionCenter(50, 50, fixed);
}
.box3{
 @include positionCenter(100, 200, relative) 
}